Sub ExtractHTMLTableToExcel()

    ' Déclaration des variables Outlook
    Dim objOutlook As Outlook.Application
    Dim objNamespace As Outlook.Namespace
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    
    ' Déclaration des variables Excel
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object
    Dim iRow As Long
    Dim IE As Object ' Internet Explorer object to load HTML
    
    ' Obtenir l'instance d'Outlook
    On Error Resume Next
    Set objOutlook = GetObject(, "Outlook.Application")
    If objOutlook Is Nothing Then
        Set objOutlook = CreateObject("Outlook.Application")
    End If
    On Error GoTo 0
    
    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0
    
    ' Vérifier que l'instance d'Excel a bien été créée
    If oXLApp Is Nothing Then
        MsgBox "Erreur : Impossible de créer ou d'accéder à une instance d'Excel.", vbCritical
        Exit Sub
    End If
    
    ' Rendre Excel visible
    oXLApp.Visible = True
    
    ' Créer un nouveau classeur Excel
    Set oXLwb = oXLApp.Workbooks.Add
    Set oXLws = oXLwb.Sheets(1)
    
    ' Sélectionner les e-mails actuels dans Outlook
    Set objSelection = objOutlook.ActiveExplorer.Selection
    
    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If
    
    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)
    
    ' Utiliser Internet Explorer pour charger le HTML du corps de l'e-mail
    Set IE = CreateObject("InternetExplorer.Application")
    IE.Visible = False ' Garder Internet Explorer invisible
    
    ' Charger le corps HTML de l'e-mail dans IE
    IE.Navigate "about:blank"
    Do While IE.Busy Or IE.ReadyState <> 4
        DoEvents
    Loop
    IE.document.body.innerHTML = objMail.HTMLBody
    
    ' Parcourir le tableau HTML
    Dim tbl As Object
    Dim tr As Object
    Dim td As Object
    
    ' Assumer qu'il y a un seul tableau
    Set tbl = IE.document.getElementsByTagName("table")(0)
    
    iRow = 1
    ' Parcourir les lignes du tableau HTML
    For Each tr In tbl.Rows
        Dim iCol As Integer
        iCol = 1
        ' Parcourir les cellules (td/th) de chaque ligne
        For Each td In tr.Cells
            oXLws.Cells(iRow, iCol).Value = td.innerText
            iCol = iCol + 1
        Next td
        iRow = iRow + 1
    Next tr
    
    ' Ajuster la taille des colonnes pour mieux voir les données
    oXLws.Columns.AutoFit
    
    ' Nettoyer les objets
    IE.Quit
    Set IE = Nothing
    Set oXLws = Nothing
    Set oXLwb = Nothing
    Set oXLApp = Nothing
    Set objMail = Nothing
    Set objNamespace = Nothing
    Set objOutlook = Nothing
    
    MsgBox "Le tableau HTML a été exporté vers Excel avec succès.", vbInformation

End Sub

