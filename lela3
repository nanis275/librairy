Sub CopyFormattedEmailTableToExcel_WithoutActiveX()

    ' Déclaration des objets Outlook
    Dim objOutlook As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    Dim oInspector As Outlook.Inspector
    Dim wdDoc As Object ' Word.Document for the email body
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object

    ' Obtenir l'instance d'Outlook
    Set objOutlook = GetObject(, "Outlook.Application")
    Set objSelection = objOutlook.ActiveExplorer.Selection

    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If

    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)

    ' Ouvrir l'e-mail dans un inspecteur pour accéder à son contenu en tant que document Word
    Set oInspector = objMail.GetInspector
    Set wdDoc = oInspector.WordEditor ' Convertir le contenu en un document Word

    ' Sélectionner tout le contenu de l'e-mail
    wdDoc.Content.Select
    wdDoc.Application.Selection.Copy ' Copier le contenu sélectionné (formaté) dans le presse-papiers

    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0

    ' Vérifier si Excel est ouvert
    If oXLApp Is Nothing Then
        MsgBox "Veuillez ouvrir Excel manuellement avant d'exécuter la macro.", vbExclamation
        Exit Sub
    End If

    ' Utiliser le classeur actif
    Set oXLwb = oXLApp.ActiveWorkbook
    If oXLwb Is Nothing Then
        MsgBox "Aucun classeur n'est ouvert dans Excel.", vbExclamation
        Exit Sub
    End If

    ' Utiliser la première feuille du classeur actif
    Set oXLws = oXLwb.Sheets(1)

    ' Coller le contenu formaté de l'e-mail directement dans Excel
    oXLws.Paste

    ' Message de confirmation
    MsgBox "Le tableau formaté a été collé dans Excel avec succès.", vbInformation

End Sub


Sub CopyFormattedEmailTableToExcel_WithoutActiveX()

    ' Déclaration des objets Outlook
    Dim objOutlook As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    Dim oInspector As Outlook.Inspector
    Dim wdDoc As Object ' Word.Document for the email body
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object
    Dim oListObject As Object
    Dim tbl As Object

    ' Obtenir l'instance d'Outlook
    Set objOutlook = GetObject(, "Outlook.Application")
    Set objSelection = objOutlook.ActiveExplorer.Selection

    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If

    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)

    ' Ouvrir l'e-mail dans un inspecteur pour accéder à son contenu en tant que document Word
    Set oInspector = objMail.GetInspector
    Set wdDoc = oInspector.WordEditor ' Convertir le contenu en un document Word

    ' Sélectionner tout le contenu de l'e-mail
    wdDoc.Content.Select
    wdDoc.Application.Selection.Copy ' Copier le contenu sélectionné (formaté) dans le presse-papiers

    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0

    ' Vérifier si Excel est ouvert
    If oXLApp Is Nothing Then
        MsgBox "Veuillez ouvrir Excel manuellement avant d'exécuter la macro.", vbExclamation
        Exit Sub
    End If

    ' Utiliser le classeur actif
    Set oXLwb = oXLApp.ActiveWorkbook
    If oXLwb Is Nothing Then
        MsgBox "Aucun classeur n'est ouvert dans Excel.", vbExclamation
        Exit Sub
    End If

    ' Utiliser la première feuille du classeur actif
    Set oXLws = oXLwb.Sheets(1)

    ' Supprimer tout tableau existant sur la feuille
    On Error Resume Next
    For Each tbl In oXLws.ListObjects
        tbl.Delete
    Next tbl
    On Error GoTo 0

    ' Coller le contenu formaté de l'e-mail directement dans Excel
    oXLws.Paste

    ' Message de confirmation
    MsgBox "Le tableau formaté a été collé dans Excel avec succès.", vbInformation

End Sub








<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Table Layout</title>
  <style>
    table {
      width: 60%;
      border-collapse: collapse;
      margin: 20px 0;
      font-size: 16px;
      text-align: left;
    }
    table, th, td {
      border: 1px solid #dddddd;
    }
    th, td {
      padding: 15px 20px;
    }
    th {
      background-color: #f2f2f2;
      font-weight: bold;
      color: #333;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #f1f1f1;
    }
    a {
      color: #007bff;
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
    /* Largeurs spécifiques pour chaque colonne */
    .col-number, .col-status, .col-approved, .col-start-time, .col-end-date, .col-ci, .col-requester {
      min-width: 150px;
    }
    /* Style pour les cellules Approved/Not Approved */
    .approved {
      background-color: green;
      color: white;
      font-weight: bold;
    }
    .not-approved {
      background-color: red;
      color: white;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <table>
    <tr>
      <th class="col-number">Number</th>
      <th class="col-status">Status</th>
      <th class="col-approved">Approved?</th>
      <th class="col-start-time">Start Time</th>
      <th class="col-end-date">End Date</th>
      <th class="col-ci">CI</th>
      <th class="col-requester">Requester</th>
      <th>Short Description</th>
      <th>Justification</th>
      <th>Risk Impact</th>
      <th>Implementation Plan</th>
      <th>Rollback Plan</th>
    </tr>

    {% for ci, changes in result.items %}
      {% for change in changes %}
        {% if change.state_display != "Canceled" %}
          <tr>
            <td class="col-number">
              <a href="https://bnpp.service-now.com/now/nav/u1/classic/params/target/change_request.do?sys_id={{ change.sys_id }}">
                {{ change.number }}
              </a>
            </td>
            <td class="col-status">{{ change.state_display }}</td>

            {% if "BNPP_CIB UK_GM ES ICET TS_SDM" in change.approval_history_display %}
              <td class="col-approved approved">APPROVED by IREGTR</td>
            {% else %}
              <td class="col-approved not-approved">NOT APPROVED by IREGTR</td>
            {% endif %}

            <td class="col-start-time">{{ change.start_date }}</td>
            <td class="col-end-date">{{ change.end_date }}</td>
            <td class="col-ci">{{ ci }}</td>
            <td class="col-requester">{{ change.assigned_to_display }}</td>
            <td>{{ change.short_description }}</td>
            <td>{{ change.justification|safe }}</td>
            <td>{{ change.risk_impact_analysis|safe }}</td>
            <td>{{ change.implementation_plan|safe }}</td>
            <td>{{ change.backout_plan|safe }}</td>
          </tr>
        {% endif %}
      {% endfor %}
    {% endfor %}

  </table>

</body>
</html>



<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Table Layout</title>
  <style>
    table {
      width: 60%;
      border-collapse: collapse;
      margin: 20px 0;
      font-size: 16px;
      text-align: left;
    }
    table, th, td {
      border: 1px solid #dddddd;
    }
    th, td {
      padding: 15px 20px;
    }
    th {
      background-color: #f2f2f2;
      font-weight: bold;
      color: #333;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #f1f1f1;
    }
    a {
      color: #007bff;
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
    /* Largeurs spécifiques pour chaque colonne */
    .col-number, .col-status, .col-approved, .col-start-time, .col-end-date, .col-ci, .col-requester {
      min-width: 850px;
    }
    /* Style pour les cellules Approved/Not Approved */
    .approved {
      background-color: green;
      color: white;
      font-weight: bold;
    }
    .not-approved {
      background-color: red;
      color: white;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <table>
    <tr>
      <th class="col-number">Number</th>
      <th class="col-status">Status</th>
      <th class="col-approved">Approved by IREGTR ?</th>
      <th class="col-start-time">Start Time</th>
      <th class="col-end-date">End Date</th>
      <th class="col-ci">CI</th>
      <th class="col-requester">Requester</th>
      <th>Short Description</th>
      <th>Justification</th>
      <th>Risk Impact</th>
      <th>Implementation Plan</th>
      <th>Post Release Check</th> <!-- New Column Header -->
      <th>Rollback Plan</th>
      <th>Post-Release-Check</th>
    </tr>

    {% for ci, changes in result.items %}
      {% for change in changes %}
        {% if change.state_display != "Canceled" %}
          <tr>
            <td class="col-number">
              <a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D{{ change.sys_id }}">
                {{ change.number }}
              </a>
            </td>
            <td class="col-status">{{ change.state_display }}</td>

            {% if "BNPP_CIB UK_GM ES ICET TS_SDM" in change.approval_history_display %}
              <td class="col-approved approved">APPROVED </td>
            {% else %}
              <td class="col-approved not-approved">NOT APPROVED</td>
            {% endif %}

            <td class="col-start-time">{{ change.start_date }}</td>
            <td class="col-end-date">{{ change.end_date }}</td>
            <td class="col-ci">{{ ci }}</td>
            <td class="col-requester">{{ change.requested_by_display }}</td>
            <td>{{ change.short_description }}</td>
            <td>{{ change.justification|safe }}</td>
            <td>{{ change.risk_impact_analysis|safe }}</td>
            <td>{{ change.implementation_plan|safe }}</td>
            <td></td> <!-- Empty cell for the Post Release Check -->
            <td>{{ change.backout_plan|safe }}</td>
          </tr>
        {% endif %}
      {% endfor %}
    {% endfor %}

  </table>

</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Release Information</title>
    <style>
        body {
            font-family: Calibri, sans-serif; /* Changed font to Calibri */
            font-size: 16px; /* Increased font size to 16px */
            margin: 0; /* Removed default margins */
        }
        h1 {
            font-size: 16px; /* Increased size for "Hi" */
            margin: 0; /* Removed margin */
            font-weight: normal; /* Removed bold */
            margin-bottom: 10px; /* Added margin to create space below */
        }
        h3 {
            font-size: 16px;
            color: MediumSeaGreen;
            margin: 0; /* Removed margin */
            margin-top: 0px; /* Added margin to create space above */
            margin-bottom: 15px ;
        }
        h4 {
            font-size: 16px;
            color: MediumSeaGreen;
            margin: 0; /* Removed margin */
            margin-top: 30px; /* Added margin to create space above */
            margin-bottom: 18px;
        }
        h5 {
            font-size:16px;
            color: black;
            margin-left: 0; /* Removed left margin */
            margin-bottom: 0px; /* Reduced space below short description */
            margin-top: 11px;
        }
        p {
            font-size:16px;
            color: black;
            margin: 0; /* Removed margins before and after text */
        }
        a {
            font-size:16px;
            color: mediumblue;
            text-decoration: none;
            font-style: italic;

        }

        ul {
                padding-left: 30px;
                margin-top: 0px; 
                margin-left: 22px;
        }

        li {
            margin-bottom: 0px;
            margin-top: 0px; 
        }
    </style>
</head>
<body>
    <h1>Hi,</h1>
    <p style="font-size: 16px; margin-bottom: 20px;">Please see below details of releases happening on the EU platform today.</p>

    <!-- Section for releases implemented early today -->
    <h3>We implemented earlier today:</h3>
    {% for result_item in result %}
        {% if "08:" in result_item.start_date or "09:" in result_item.start_date or "10:" in result_item.start_date or "11:" in result_item.start_date or "12:" in result_item.start_date or "13:" in result_item.start_date or "14:" in result_item.start_date %}
            {% if result_item.state_display != "Canceled" %}
                {% if "BAU" not in result_item.short_description%}
                     {% if "Nighthawk" in result_item.short_description or "BlackBird" in result_item.short_description %}
                        {% if loop.first %}
                            <h3>Nighthawk and BlackBird Releases</h3>
                        {% endif %}
                        <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;">{{ result_item.short_description }}</span></h5>
                        
                             <ul>
                                <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                            </ul>
                  
                                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a>
                                     {% elif "Vulcan" in result_item.short_description %}
                                        {% if loop.first %}
                                        <h3>Vulcan Releases</h3>
                                    {% endif %}
                                <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;">{{ result_item.short_description }}</span></h5>
                  
                            <ul>
                                <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                            </ul>

                                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a>

                      {% else %}
                                  {% if loop.first %}
                                 <h3>Other Releases</h3>
                      {% endif %}
                            <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;"> {{ result_item.short_description }}</span></h5>
                        
                            <ul>
                                <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                           </ul>
                        
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a>
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endfor %}

    <!-- Section for releases implemented on or after 17:30 -->
    <h4>We will implement on or after 17:30 LDN time:</h4>
    {% for result_item in result %}
       {% if "15:" in result_item.start_date or "16:" in result_item.start_date or "17:" in result_item.start_date or "18:" in result_item.start_date %}
           {% if result_item.state_display != "Canceled" %}
             {% if "BAU" not in result_item.short_description %}
                 {% if "Nighthawk" in result_item.short_description or "BlackBird" in result_item.short_description %}
                      {% if loop.first %}
                          <h3>Nighthawk and BlackBird Releases</h3>
                     {% endif %}
                     <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;">{{ result_item.short_description }}</span></h5>
                     
                            <ul>
                               <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                          </ul>
                          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a></p>
                  {% elif "Vulcan" in result_item.short_description %}
                        {% if loop.first %}
                         <h3>Vulcan Releases</h3>
                     {% endif %}
                     <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;">{{ result_item.short_description }}</span></h5>
                          <ul>
                                  <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                            </ul>
      
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a></p>
                  {% else %}
                       {% if loop.first %}
                          <h3>Other Releases</h3>
                      {% endif %}
                      <h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="text-decoration: underline;"> {{ result_item.short_description }}</span></h5>
                     
                          <ul>
                                <li>&nbsp;&nbsp;{{ result_item.justification }}</li>
                           </ul>
      
                          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D
{{ result_item.sys_id }}">{{ result_item.number }}</a>
                    {% endif %}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endfor %}
</body>
</html>






Sub GenerateReleaseNoteEmail()

    ' Déclaration des variables
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MailBody As String
    Dim lastRow As Long
    Dim i As Long
    
    ' Initialisation d'Outlook
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' Début du contenu HTML de l'e-mail
    MailBody = "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    MailBody = MailBody & "<title>Release Information</title><style>"
    MailBody = MailBody & "body {font-family: Calibri, sans-serif; font-size: 16px; margin: 0;}"
    MailBody = MailBody & "h1 {font-size: 16px; margin-bottom: 10px; font-weight: normal;}"
    MailBody = MailBody & "h3 {font-size: 16px; color: MediumSeaGreen; margin-bottom: 15px;}"
    MailBody = MailBody & "h5 {font-size:16px; margin-top: 11px;}"
    MailBody = MailBody & "p {font-size:16px; margin-bottom: 20px;}"
    MailBody = MailBody & "a {font-size:16px; color: mediumblue; text-decoration: none; font-style: italic;}"
    MailBody = MailBody & "ul {padding-left: 30px; margin-left: 22px;}"
    MailBody = MailBody & "</style></head><body>"

    ' Contenu de l'e-mail avec tes balises HTML
    MailBody = MailBody & "<h1>Hi,</h1>"
    MailBody = MailBody & "<p style='font-size: 16px; margin-bottom: 20px;'>Please see below details of releases happening on the EU platform today.</p>"
    MailBody = MailBody & "<h3>We implemented earlier today:</h3>"
    
    ' Parcours des lignes d'Excel et ajout des données dans le HTML
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row ' Trouve la dernière ligne utilisée
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>" & Cells(i, 2).Value & "</span></h5>"
            MailBody = MailBody & "<ul><li>&nbsp;&nbsp;" & Cells(i, 3).Value & "</li></ul>"
            MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 4).Value & "'>" & Cells(i, 4).Value & "</a>"
        End If
    Next i

    ' Section pour les releases après 17h30
    MailBody = MailBody & "<h4>We will implement on or after 17:30 LDN time:</h4>"
    ' Ajoute ici une autre boucle pour les releases prévues après 17h30, comme pour les premières releases

    ' Fermeture du HTML
    MailBody = MailBody & "</body></html>"
    
    ' Paramètres de l'e-mail
    With OutMail
        .To = "email@example.com" ' Remplace par l'adresse e-mail cible
        .CC = ""
        .BCC = ""
        .Subject = "Release Note for Today"
        .HTMLBody = MailBody ' Utiliser HTMLBody pour envoyer un e-mail avec le format HTML
        .Display ' Utiliser .Send pour envoyer directement l'e-mail, sinon .Display pour prévisualiser
    End With

    ' Libérer la mémoire
    Set OutMail = Nothing
    Set OutApp = Nothing

End Sub






Sub GenerateReleaseNoteEmail()

    ' Déclaration des variables
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MailBody As String
    Dim lastRow As Long
    Dim i As Long
    
    ' Initialisation d'Outlook
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' Début du contenu HTML de l'e-mail
    MailBody = "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    MailBody = MailBody & "<title>Release Information</title><style>"
    MailBody = MailBody & "body {font-family: Calibri, sans-serif; font-size: 16px; margin: 0;} "
    MailBody = MailBody & "h1 {font-size: 16px; margin-bottom: 10px; font-weight: normal;} "
    MailBody = MailBody & "h3 {font-size: 16px; color: MediumSeaGreen; margin-bottom: 15px;} "
    MailBody = MailBody & "h5 {font-size:16px; margin-top: 11px;} "
    MailBody = MailBody & "p {font-size:16px; margin-bottom: 20px;} "
    MailBody = MailBody & "a {font-size:16px; color: mediumblue; text-decoration: none; font-style: italic;} "
    MailBody = MailBody & "ul {padding-left: 30px; margin-left: 22px;} "
    MailBody = MailBody & "</style></head><body>"

    ' Contenu de l'e-mail avec tes balises HTML
    MailBody = MailBody & "<h1>Hi,</h1>"
    MailBody = MailBody & "<p style='font-size: 16px; margin-bottom: 20px;'>Please see below details of releases happening on the EU platform today.</p>"
    MailBody = MailBody & "<h3>We implemented earlier today:</h3>"
    
    ' Parcours des lignes d'Excel et ajout des données dans le HTML
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row ' Trouve la dernière ligne utilisée
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Ajoute la Short Description (colonne H), Justification (colonne I) et Number (colonne A)
            MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>Short Description: " & Cells(i, 8).Value & "</span></h5>" ' Colonne H = 8
            MailBody = MailBody & "<ul><li>&nbsp;&nbsp;Justification: " & Cells(i, 9).Value & "</li></ul>" ' Colonne I = 9
            MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a>" ' Colonne A = 1
        End If
    Next i

    ' Section pour les releases après 17h30
    MailBody = MailBody & "<h4>We will implement on or after 17:30 LDN time:</h4>"
    ' Ajoute ici une autre boucle pour les releases prévues après 17h30, comme pour les premières releases

    ' Fermeture du HTML
    MailBody = MailBody & "</body></html>"
    
    ' Paramètres de l'e-mail
    With OutMail
        .To = "email@example.com" ' Remplace par l'adresse e-mail cible
        .CC = ""
        .BCC = ""
        .Subject = "Release Note for Today"
        .HTMLBody = MailBody ' Utiliser HTMLBody pour envoyer un e-mail avec le format HTML
        .Display ' Utiliser .Send pour envoyer directement l'e-mail, sinon .Display pour prévisualiser
    End With

    ' Libérer la mémoire
    Set OutMail = Nothing
    Set OutApp = Nothing

End Sub




Sub GenerateReleaseNoteEmail()

    ' Déclaration des variables
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MailBody As String
    Dim lastRow As Long
    Dim i As Long
    Dim releaseTime As Date
    
    ' Initialisation d'Outlook
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' Début du contenu HTML de l'e-mail
    MailBody = "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    MailBody = MailBody & "<title>Release Information</title><style>"
    MailBody = MailBody & "body {font-family: Calibri, sans-serif; font-size: 16px; margin: 0;} "
    MailBody = MailBody & "h1 {font-size: 16px; margin-bottom: 10px; font-weight: normal;} "
    MailBody = MailBody & "h3 {font-size: 16px; color: MediumSeaGreen; margin-bottom: 15px;} "
    MailBody = MailBody & "h5 {font-size:16px; margin-top: 11px;} "
    MailBody = MailBody & "p {font-size:16px; margin-bottom: 20px;} "
    MailBody = MailBody & "a {font-size:16px; color: mediumblue; text-decoration: none; font-style: italic;} "
    MailBody = MailBody & "ul {padding-left: 30px; margin-left: 22px;} "
    MailBody = MailBody & "</style></head><body>"

    ' Contenu de l'e-mail
    MailBody = MailBody & "<h1>Hi,</h1>"
    MailBody = MailBody & "<p style='font-size: 16px; margin-bottom: 20px;'>Please see below details of releases happening on the EU platform today.</p>"
    
    ' Section des releases avant 17h30
    MailBody = MailBody & "<h3>We implemented earlier today:</h3>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases avant 17h30
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row ' Trouve la dernière ligne utilisée
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Extraire l'heure de la colonne Start_date (D) et la comparer à 17h30
            releaseTime = TimeValue(Cells(i, 4).Value)
            If releaseTime < TimeValue("17:30:00") Then
                ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A)
                MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>Short Description: " & Cells(i, 8).Value & "</span></h5>"
                MailBody = MailBody & "<ul><li>&nbsp;&nbsp;Justification: " & Cells(i, 9).Value & "</li></ul>"
                MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a>"
            End If
        End If
    Next i

    ' Section des releases après 17h30
    MailBody = MailBody & "<h4>We will implement on or after 17:30 LDN time:</h4>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases après 17h30
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Extraire l'heure de la colonne Start_date (D) et la comparer à 17h30
            releaseTime = TimeValue(Cells(i, 4).Value)
            If releaseTime >= TimeValue("17:30:00") Then
                ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A)
                MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>Short Description: " & Cells(i, 8).Value & "</span></h5>"
                MailBody = MailBody & "<ul><li>&nbsp;&nbsp;Justification: " & Cells(i, 9).Value & "</li></ul>"
                MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a>"
            End If
        End If
    Next i

    ' Fermeture du HTML
    MailBody = MailBody & "</body></html>"
    
    ' Paramètres de l'e-mail
    With OutMail
        .To = "email@example.com" ' Remplace par l'adresse e-mail cible
        .CC = ""
        .BCC = ""
        .Subject = "Release Note for Today"
        .HTMLBody = MailBody ' Utiliser HTMLBody pour envoyer un e-mail avec le format HTML
        .Display ' Utiliser .Send pour envoyer directement l'e-mail, sinon .Display pour prévisualiser
    End With

    ' Libérer la mémoire
    Set OutMail = Nothing
    Set OutApp = Nothing

End Sub





Sub GenerateReleaseNoteEmail()

    ' Déclaration des variables
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MailBody As String
    Dim lastRow As Long
    Dim i As Long
    Dim releaseTime As Date
    
    ' Initialisation d'Outlook
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' Début du contenu HTML de l'e-mail
    MailBody = "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    MailBody = MailBody & "<title>Release Information</title><style>"
    MailBody = MailBody & "body {font-family: Calibri, sans-serif; font-size: 16px; margin: 0;} "
    MailBody = MailBody & "h1 {font-size: 16px; margin-bottom: 10px; font-weight: normal;} "
    MailBody = MailBody & "h3 {font-size: 16px; color: MediumSeaGreen; margin-bottom: 15px;} "
    MailBody = MailBody & "h5 {font-size:16px; margin-top: 11px;} "
    MailBody = MailBody & "p {font-size:16px; margin-bottom: 20px;} "
    MailBody = MailBody & "a {font-size:16px; color: mediumblue; text-decoration: none; font-style: italic;} "
    MailBody = MailBody & "ul {padding-left: 30px; margin-left: 22px;} "
    MailBody = MailBody & "</style></head><body>"

    ' Contenu de l'e-mail
    MailBody = MailBody & "<h1>Hi,</h1>"
    MailBody = MailBody & "<p style='font-size: 16px; margin-bottom: 20px;'>Please see below details of releases happening on the EU platform today.</p>"
    
    ' Section des releases avant 17h30
    MailBody = MailBody & "<h3>We implemented earlier today:</h3>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases avant 17h30
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row ' Trouve la dernière ligne utilisée
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Vérifie si la cellule contient une date valide avant d'utiliser TimeValue
            If IsDate(Cells(i, 4).Value) Then
                releaseTime = TimeValue(Cells(i, 4).Value)
                If releaseTime < TimeValue("17:30:00") Then
                    ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A)
                    MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>Short Description: " & Cells(i, 8).Value & "</span></h5>"
                    MailBody = MailBody & "<ul><li>&nbsp;&nbsp;Justification: " & Cells(i, 9).Value & "</li></ul>"
                    MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a>"
                End If
            End If
        End If
    Next i

    ' Section des releases après 17h30
    MailBody = MailBody & "<h4>We will implement on or after 17:30 LDN time:</h4>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases après 17h30
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Vérifie si la cellule contient une date valide avant d'utiliser TimeValue
            If IsDate(Cells(i, 4).Value) Then
                releaseTime = TimeValue(Cells(i, 4).Value)
                If releaseTime >= TimeValue("17:30:00") Then
                    ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A)
                    MailBody = MailBody & "<h5>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style='text-decoration: underline;'>Short Description: " & Cells(i, 8).Value & "</span></h5>"
                    MailBody = MailBody & "<ul><li>&nbsp;&nbsp;Justification: " & Cells(i, 9).Value & "</li></ul>"
                    MailBody = MailBody & "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a>"
                End If
            End If
        End If
    Next i

    ' Fermeture du HTML
    MailBody = MailBody & "</body></html>"
    
    ' Paramètres de l'e-mail
    With OutMail
        .To = "email@example.com" ' Remplace par l'adresse e-mail cible
        .CC = ""
        .BCC = ""
        .Subject = "Release Note for Today"
        .HTMLBody = MailBody ' Utiliser HTMLBody pour envoyer un e-mail avec le format HTML
        .Display ' Utiliser .Send pour envoyer directement l'e-mail, sinon .Display pour prévisualiser
    End With

    ' Libérer la mémoire
    Set OutMail = Nothing
    Set OutApp = Nothing

End Sub





Sub GenerateReleaseNoteEmail()

    ' Déclaration des variables
    Dim OutApp As Object
    Dim OutMail As Object
    Dim MailBody As String
    Dim lastRow As Long
    Dim i As Long
    Dim releaseTime As Date
    
    ' Initialisation d'Outlook
    Set OutApp = CreateObject("Outlook.Application")
    Set OutMail = OutApp.CreateItem(0)
    
    ' Début du contenu HTML de l'e-mail
    MailBody = "<html lang='en'><head><meta charset='UTF-8'><meta name='viewport' content='width=device-width, initial-scale=1.0'>"
    MailBody = MailBody & "<title>Release Information</title><style>"
    MailBody = MailBody & "body {font-family: Calibri, sans-serif; font-size: 16px; margin: 0;} "
    MailBody = MailBody & "h1 {font-size: 16px; margin-bottom: 10px; font-weight: normal;} "
    MailBody = MailBody & "h3 {font-size: 16px; color: MediumSeaGreen; margin-bottom: 10px;} " ' Réduction de margin-bottom
    MailBody = MailBody & "p {font-size:16px; margin-top: 5px; margin-bottom: 5px;} " ' Réduction des marges pour les paragraphes
    MailBody = MailBody & "a {font-size:16px; color: mediumblue; text-decoration: none; font-style: italic;} "
    MailBody = MailBody & "ul {padding-left: 30px; margin-left: 22px; margin-top: 5px; margin-bottom: 5px;} " ' Réduction des marges des listes
    MailBody = MailBody & "</style></head><body>"

    ' Contenu de l'e-mail
    MailBody = MailBody & "<h1>Hi,</h1>"
    MailBody = MailBody & "<p style='font-size: 16px;'>Please see below details of releases happening on the EU platform today.</p>"
    
    ' Section des releases avant 17h30
    MailBody = MailBody & "<h3>We implemented earlier today:</h3>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases avant 17h30
    lastRow = Cells(Rows.Count, 1).End(xlUp).Row ' Trouve la dernière ligne utilisée
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Vérifie si la cellule contient une date valide avant d'utiliser TimeValue
            If IsDate(Cells(i, 4).Value) Then
                releaseTime = TimeValue(Cells(i, 4).Value)
                If releaseTime < TimeValue("17:30:00") Then
                    ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A) avec des marges réduites
                    MailBody = MailBody & "<p><strong>Short Description:</strong> " & Cells(i, 8).Value & "</p>"
                    MailBody = MailBody & "<ul><li><strong>Justification:</strong> " & Cells(i, 9).Value & "</li></ul>"
                    MailBody = MailBody & "<p><a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a></p>"
                End If
            End If
        End If
    Next i

    ' Section des releases après 17h30
    MailBody = MailBody & "<h4>We will implement on or after 17:30 LDN time:</h4>"

    ' Parcours des lignes d'Excel et ajout des données pour les releases après 17h30
    For i = 2 To lastRow
        If Cells(i, 1).Value <> "" Then ' Suppose que la colonne A contient des données à vérifier
            ' Vérifie si la cellule contient une date valide avant d'utiliser TimeValue
            If IsDate(Cells(i, 4).Value) Then
                releaseTime = TimeValue(Cells(i, 4).Value)
                If releaseTime >= TimeValue("17:30:00") Then
                    ' Ajoute la Short Description (colonne H), Justification (colonne I), et Number (colonne A) avec des marges réduites
                    MailBody = MailBody & "<p><strong>Short Description:</strong> " & Cells(i, 8).Value & "</p>"
                    MailBody = MailBody & "<ul><li><strong>Justification:</strong> " & Cells(i, 9).Value & "</li></ul>"
                    MailBody = MailBody & "<p><a href='https://bnpp.service-now.com/now/nav/ui/classic/params/target/change_request.do%3Fsys_id%3D" & Cells(i, 1).Value & "'>Number: " & Cells(i, 1).Value & "</a></p>"
                End If
            End If
        End If
    Next i

    ' Fermeture du HTML
    MailBody = MailBody & "</body></html>"
    
    ' Paramètres de l'e-mail
    With OutMail
        .To = "email@example.com" ' Remplace par l'adresse e-mail cible
        .CC = ""
        .BCC = ""
        .Subject = "Release Note for Today"
        .HTMLBody = MailBody ' Utiliser HTMLBody pour envoyer un e-mail avec le format HTML
        .Display ' Utiliser .Send pour envoyer directement l'e-mail, sinon .Display pour prévisualiser
    End With

    ' Libérer la mémoire
    Set OutMail = Nothing
    Set OutApp = Nothing

End Sub





Sub CopyFormattedEmailTableToExcel_WithoutActiveX()

    ' Déclaration des objets Outlook
    Dim objOutlook As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    Dim oInspector As Outlook.Inspector
    Dim wdDoc As Object ' Word.Document for the email body
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object
    Dim oListObject As Object
    Dim tbl As Object

    ' Obtenir l'instance d'Outlook
    Set objOutlook = GetObject(, "Outlook.Application")
    Set objSelection = objOutlook.ActiveExplorer.Selection

    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If

    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)

    ' Ouvrir l'e-mail dans un inspecteur pour accéder à son contenu en tant que document Word
    Set oInspector = objMail.GetInspector
    Set wdDoc = oInspector.WordEditor ' Convertir le contenu en un document Word

    ' Sélectionner tout le contenu de l'e-mail
    wdDoc.Content.Select
    wdDoc.Application.Selection.Copy ' Copier le contenu sélectionné (formaté) dans le presse-papiers

    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0

    ' Vérifier si Excel est ouvert
    If oXLApp Is Nothing Then
        MsgBox "Veuillez ouvrir Excel manuellement avant d'exécuter la macro.", vbExclamation
        Exit Sub
    End If

    ' Utiliser le classeur actif
      Set oXLwb = oXLApp.Workbooks.Open("\\londata001.uk.net.intra\Infdata\MIGRATED\tmp\irgetr\RNfulldata12.xlsm")

    ' Utiliser la première feuille du classeur actif
      Set oXLws = oXLwb.Sheets(1)

    ' Supprimer tout tableau existant sur la feuille
      oXLws.Cells.Clear
    
    'Se placer sur la cellule A1'
    
      oXLws.Range("A1").Select
         
    ' Coller le contenu formaté de l'e-mail directement dans Excel
      oXLws.Paste
 
    ' Message de confirmation
      MsgBox "Le tableau formaté a été collé dans Excel avec succès.", vbInformation

End Sub

