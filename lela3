Sub CopyFormattedEmailTableToExcel_WithoutActiveX()

    ' Déclaration des objets Outlook
    Dim objOutlook As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    Dim oInspector As Outlook.Inspector
    Dim wdDoc As Object ' Word.Document for the email body
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object

    ' Obtenir l'instance d'Outlook
    Set objOutlook = GetObject(, "Outlook.Application")
    Set objSelection = objOutlook.ActiveExplorer.Selection

    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If

    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)

    ' Ouvrir l'e-mail dans un inspecteur pour accéder à son contenu en tant que document Word
    Set oInspector = objMail.GetInspector
    Set wdDoc = oInspector.WordEditor ' Convertir le contenu en un document Word

    ' Sélectionner tout le contenu de l'e-mail
    wdDoc.Content.Select
    wdDoc.Application.Selection.Copy ' Copier le contenu sélectionné (formaté) dans le presse-papiers

    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0

    ' Vérifier si Excel est ouvert
    If oXLApp Is Nothing Then
        MsgBox "Veuillez ouvrir Excel manuellement avant d'exécuter la macro.", vbExclamation
        Exit Sub
    End If

    ' Utiliser le classeur actif
    Set oXLwb = oXLApp.ActiveWorkbook
    If oXLwb Is Nothing Then
        MsgBox "Aucun classeur n'est ouvert dans Excel.", vbExclamation
        Exit Sub
    End If

    ' Utiliser la première feuille du classeur actif
    Set oXLws = oXLwb.Sheets(1)

    ' Coller le contenu formaté de l'e-mail directement dans Excel
    oXLws.Paste

    ' Message de confirmation
    MsgBox "Le tableau formaté a été collé dans Excel avec succès.", vbInformation

End Sub


Sub CopyFormattedEmailTableToExcel_WithoutActiveX()

    ' Déclaration des objets Outlook
    Dim objOutlook As Outlook.Application
    Dim objMail As Outlook.MailItem
    Dim objSelection As Outlook.Selection
    Dim oInspector As Outlook.Inspector
    Dim wdDoc As Object ' Word.Document for the email body
    Dim oXLApp As Object
    Dim oXLwb As Object
    Dim oXLws As Object
    Dim oListObject As Object
    Dim tbl As Object

    ' Obtenir l'instance d'Outlook
    Set objOutlook = GetObject(, "Outlook.Application")
    Set objSelection = objOutlook.ActiveExplorer.Selection

    ' Vérifier s'il y a un e-mail sélectionné
    If objSelection.Count = 0 Then
        MsgBox "Veuillez sélectionner un e-mail contenant du HTML.", vbExclamation
        Exit Sub
    End If

    ' Extraire le premier e-mail de la sélection
    Set objMail = objSelection.Item(1)

    ' Ouvrir l'e-mail dans un inspecteur pour accéder à son contenu en tant que document Word
    Set oInspector = objMail.GetInspector
    Set wdDoc = oInspector.WordEditor ' Convertir le contenu en un document Word

    ' Sélectionner tout le contenu de l'e-mail
    wdDoc.Content.Select
    wdDoc.Application.Selection.Copy ' Copier le contenu sélectionné (formaté) dans le presse-papiers

    ' Obtenir l'instance d'Excel ou en créer une
    On Error Resume Next
    Set oXLApp = GetObject(, "Excel.Application")
    If oXLApp Is Nothing Then
        Set oXLApp = CreateObject("Excel.Application")
    End If
    On Error GoTo 0

    ' Vérifier si Excel est ouvert
    If oXLApp Is Nothing Then
        MsgBox "Veuillez ouvrir Excel manuellement avant d'exécuter la macro.", vbExclamation
        Exit Sub
    End If

    ' Utiliser le classeur actif
    Set oXLwb = oXLApp.ActiveWorkbook
    If oXLwb Is Nothing Then
        MsgBox "Aucun classeur n'est ouvert dans Excel.", vbExclamation
        Exit Sub
    End If

    ' Utiliser la première feuille du classeur actif
    Set oXLws = oXLwb.Sheets(1)

    ' Supprimer tout tableau existant sur la feuille
    On Error Resume Next
    For Each tbl In oXLws.ListObjects
        tbl.Delete
    Next tbl
    On Error GoTo 0

    ' Coller le contenu formaté de l'e-mail directement dans Excel
    oXLws.Paste

    ' Message de confirmation
    MsgBox "Le tableau formaté a été collé dans Excel avec succès.", vbInformation

End Sub








<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Table Layout</title>
  <style>
    table {
      width: 60%;
      border-collapse: collapse;
      margin: 20px 0;
      font-size: 16px;
      text-align: left;
    }
    table, th, td {
      border: 1px solid #dddddd;
    }
    th, td {
      padding: 15px 20px;
    }
    th {
      background-color: #f2f2f2;
      font-weight: bold;
      color: #333;
    }
    tr:nth-child(even) {
      background-color: #f9f9f9;
    }
    tr:hover {
      background-color: #f1f1f1;
    }
    a {
      color: #007bff;
      text-decoration: none;
    }
    a:hover {
      text-decoration: underline;
    }
    /* Largeurs spécifiques pour chaque colonne */
    .col-number, .col-status, .col-approved, .col-start-time, .col-end-date, .col-ci, .col-requester {
      min-width: 150px;
    }
    /* Style pour les cellules Approved/Not Approved */
    .approved {
      background-color: green;
      color: white;
      font-weight: bold;
    }
    .not-approved {
      background-color: red;
      color: white;
      font-weight: bold;
    }
  </style>
</head>
<body>

  <table>
    <tr>
      <th class="col-number">Number</th>
      <th class="col-status">Status</th>
      <th class="col-approved">Approved?</th>
      <th class="col-start-time">Start Time</th>
      <th class="col-end-date">End Date</th>
      <th class="col-ci">CI</th>
      <th class="col-requester">Requester</th>
      <th>Short Description</th>
      <th>Justification</th>
      <th>Risk Impact</th>
      <th>Implementation Plan</th>
      <th>Rollback Plan</th>
    </tr>

    {% for ci, changes in result.items %}
      {% for change in changes %}
        {% if change.state_display != "Canceled" %}
          <tr>
            <td class="col-number">
              <a href="https://bnpp.service-now.com/now/nav/u1/classic/params/target/change_request.do?sys_id={{ change.sys_id }}">
                {{ change.number }}
              </a>
            </td>
            <td class="col-status">{{ change.state_display }}</td>

            {% if "BNPP_CIB UK_GM ES ICET TS_SDM" in change.approval_history_display %}
              <td class="col-approved approved">APPROVED by IREGTR</td>
            {% else %}
              <td class="col-approved not-approved">NOT APPROVED by IREGTR</td>
            {% endif %}

            <td class="col-start-time">{{ change.start_date }}</td>
            <td class="col-end-date">{{ change.end_date }}</td>
            <td class="col-ci">{{ ci }}</td>
            <td class="col-requester">{{ change.assigned_to_display }}</td>
            <td>{{ change.short_description }}</td>
            <td>{{ change.justification|safe }}</td>
            <td>{{ change.risk_impact_analysis|safe }}</td>
            <td>{{ change.implementation_plan|safe }}</td>
            <td>{{ change.backout_plan|safe }}</td>
          </tr>
        {% endif %}
      {% endfor %}
    {% endfor %}

  </table>

</body>
</html>


